services:
  db:
    image: postgres:17
    container_name: postgres_db_service
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ./dump/dump-BANCO_POPULADO_V2-202509112019.sql:/docker-entrypoint-initdb.d/dump.sql
    ports:
      - "5436:5436"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5


  mongo:
    image: mongo:8
    container_name: mongo_audit_service
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  etl-service:
    build:
      context: ./etl-python
    restart: 'no'
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      mongo:
        condition: service_healthy

volumes:
  mongo-data:
